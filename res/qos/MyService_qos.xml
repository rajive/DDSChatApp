<?xml version="1.0"?>
<!--  
#******************************************************************************
#   Copyright 2019 Rajive Joshi, Real-Time Innovations Inc.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#******************************************************************************
-->
<dds xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="/opt/rti/NDDSHOME/resource/schema/rti_dds_qos_profiles.xsd">

    <!-- Reusable QoS Snippets -->
    <qos_library name="SnippetQosLib">

        <qos_profile name="Unbounded4096">
            <datawriter_qos>
                <property><!-- Not supported in Connext Micro: Ignored -->
                    <value>
                        <!-- This property is used to force dynamic memory 
                             allocation for samples with a serialized size of 
                             larger than N. Without setting pool_buffer_max_
                             size, all memory would be obtained from a 
                             pre-allocated pool, which would greatly increase 
                             the memory usage in an application that sends 
                             large data. 

                             This property is typically needed when using 
                                    -unboundedSupport command-line 
                             option with rtiddsgen -->
                        <element>
                           <name>dds.data_writer.history.memory_manager.fast_pool.pool_buffer_max_size</name>
                           <value><!-- N = -->4096</value>
                        </element>
                    </value>
                </property>
            </datawriter_qos>

            <datareader_qos>
                <property><!-- Not supported in Connext Micro: Ignored -->
                    <value>
                        <!-- This property is used to force dynamic memory 
                             allocation for the buffers that are used to keep 
                             the serialized keys for instances with a serialized
                             size of larger than N. Without setting 
                             pool_buffer_max_size, all memory would be obtained 
                             from a pre-allocated pool, which would greatly 
                             increase the memory usage in an application that
                             receives keyed large data. 

                             This property is typically needed when using 
                                    -unboundedSupport command-line 
                             option with rtiddsgen -->
                        <element>
                            <name>dds.data_reader.history.memory_manager.fast_pool.pool_buffer_max_size</name>
                            <value><!-- N = -->4096</value>
                        </element>
                    </value>
               </property>
            </datareader_qos>
        </qos_profile>

        <qos_profile name="Exclusive">
            <datawriter_qos>
                <ownership><kind>EXCLUSIVE_OWNERSHIP_QOS</kind></ownership>
            </datawriter_qos>

            <datareader_qos>
                <ownership><kind>EXCLUSIVE_OWNERSHIP_QOS</kind></ownership>        
             </datareader_qos>
        </qos_profile>

        <qos_profile name="Strength10">
            <datawriter_qos>
                <ownership_strength><value>10</value></ownership_strength>
            </datawriter_qos>
        </qos_profile>
    </qos_library>


    <!-- MyService QoS -->
    <qos_library name="MyServiceQosLib">
 
		<qos_profile name="MyService_Root" is_default_qos="true">
			<base_name>
				<element>SnippetQosLib::Unbounded4096</element>
			</base_name>

			<datawriter_qos topic_filter="Chat*"
			                base_name="BuiltinQosLibExp::Pattern.Status">
                <lifespan>
                    <duration>
                        <sec>20</sec>
                        <nanosec>0</nanosec>
                    </duration>
                </lifespan>
			</datawriter_qos>

			<datareader_qos topic_filter="Chat*"
			                base_name="BuiltinQosLibExp::Pattern.Status">
                <history>
                    <depth>3</depth>
                </history>
			</datareader_qos>

            <participant_qos>
                <!-- The participant name, if it is set, will be displayed in 
                     the RTI tools, making it easier for you to tell one 
                     application from another -->
                <participant_name>
                    <name>Rajive</name>
                </participant_name>
            </participant_qos>
		</qos_profile>


        <!-- Pub Interface QoS policies -->
        <qos_profile name="MyService_Pub" base_name="MyService_Root">
            <publisher_qos>
                <partition><!-- Not supported in Connext Micro: Ignored -->
                    <name>
                        <element></element> 
                        <element>starwars</element>
                        <element>startrek</element> 
                        <element>funny</element>
                        <element>*</element>
                    </name>
                </partition>
            </publisher_qos>
        </qos_profile>


        <!-- Sub Interface QoS policies -->
        <qos_profile name="MyService_Sub" base_name="MyService_Root" />
        
        
        <!-- Pub.Exclusive Interface QoS policies -->
		<qos_profile name="MyService_Pub.Exclusive" base_name="MyService_Pub">
			<datawriter_qos topic_filter="Chat*">
                <base_name>
                    <element>SnippetQosLib::Exclusive</element>
                    <element>SnippetQosLib::Strength10</element>
                </base_name>
			</datawriter_qos>
		</qos_profile>


         <!-- Sub.Exclusive Interface QoS policies -->
        <qos_profile name="MyService_Sub.Exclusive" base_name="MyService_Sub">        
            <datareader_qos topic_filter="Chat*">
                <base_name>
                    <element>SnippetQosLib::Exclusive</element>
                </base_name>
		     </datareader_qos>
		</qos_profile>


         <!-- PubSub Interface QoS policies -->
        <qos_profile name="MyService_PubSub" base_name="MyService_Root" />

    </qos_library>
</dds>